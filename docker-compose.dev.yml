version: '3'

services:
  backend:
    build: 
      context: ./backend/
      dockerfile: Dockerfile.dev
#    command: bash -c "rm -f db.sqlite3 && python manage.py migrate && python -m pytest --reuse-db && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    container_name: django_saas_backend
    volumes:
      - ./backend:/django-saas-backend
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}

  worker:
    build: 
      context: ./backend/
      dockerfile: Dockerfile.dev
    command: bash ./wait-for-it.sh -t 100 django_saas_backend:8000 -- python manage.py qcluster
    container_name: django_saas_worker
    depends_on:
      - "backend"
    volumes:
      - ./backend:/django-saas-worker
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}


  frontend:
    build: 
      context: ./frontend/
      dockerfile: Dockerfile.dev
    command: sh -c "cd saas && sh set-env.sh /django-saas-frontend/saas/src/ && npm start"
    container_name: django_saas_frontend
    volumes:
      - ./frontend/:/django-saas-frontend
    ports:
      - "4200:4200"
    environment:
      - API_BASE_URL=${API_BASE_URL}
      - APP_BASE_URL=${APP_BASE_URL}
